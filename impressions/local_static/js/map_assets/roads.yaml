# Cinnabar is a classic look and should be your go-to for general mapping applications.
# Give OpenStreetMap data a refined basemap skin using the Tangram graphics library and
# Mapzen's versatile Vector Tiles.
#
# This style is a High Road influenced evolution of the Traditional style Stamen created
# for Mapzen's Open Android app in 2014. Please use and adapt the open source scene file
# in your own projects!
#
# Authors: Nathaniel V. Kelso, Geraldine Sarmiento
# Read more: https://github.com/tangrams/cinnabar-style
#

global:
    # SHIELDS
    sdk_shield_color: black
    sdk_shield_text_color: white

labels-global:
    - &text_visible_continent         true
    - &text_visible_island            true
    - &text_visible_admin             true
    - &text_visible_populated_places  true
    - &icon_visible_populated_places  true
    - &text_visible_neighbourhoods    true
    - &text_visible_neighbourhoods_e  true
    - &text_visible_building          true
    - &text_visible_address           true
    - &text_visible_water_labels      true
    - &label_visible_landuse_green    true
    - &icon_visible_landuse_green     true     # needs work
    - &text_visible_landuse_green     true
    - &label_visible_poi_landuse      true
    - &icon_visible_poi_landuse       false     #false for default
    - &text_visible_poi_landuse       false     #false for default
    - &text_visible_landuse_generic   false     #false for default
    - &label_visible_poi_landuse_e    true
    - &icon_visible_poi_landuse_e     false     #false for default
    - &text_visible_poi_landuse_e     true
    - &label_visible_station          false     #false for default
    - &icon_visible_station           false     #false for default
    - &text_visible_station           false     #false for default
    - &text_visible_highway           true
    - &text_visible_highway_e         false     #false for default, #false for more
    - &text_visible_trunk_primary     true
    - &text_visible_trunk_primary_e2  true     #false for default, #false for more
    - &text_visible_trunk_primary_e   true     #false for default, #false for more
    - &text_visible_secondary         true
    - &text_visible_secondary_e       true     #false for default, #false for more
    - &text_visible_tertiary          true
    - &text_visible_tertiary_e        true     #false for default, #false for more
    - &text_visible_minor_road        true
    - &text_visible_minor_road_e      true
    - &text_visible_service_road      true
    - &text_visible_path              true
    - &text_visible_piste             true
    - &text_visible_steps             true
    - &text_visible_aerialway         true
    - &text_visible_shields           true
    - &text_visible_exits             true
    - &text_visible_exits_e           false     #false for default, #false for more
    - &text_visible_airport_gate      true


sources:
    mapzen:
        type: TopoJSON #GeoJSON, MVT, TopoJSON
        # url:  https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson
        # Mapzen server discontinued Jan 2018
        url:  topojson/all/{z}/{x}/{y}.topojson
        # url:  https://tile.dev.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson
        #url:  //localhost:8080/vector/all/{z}/{x}/{y}.json
        url_params:
            api_key: vector-tiles-HqUVidw
        # max_zoom: 16
        max_zoom: 13

cinnabar-colors:
    cameras:
        - &camera_settings            { type: isometric, axis: [0, .1], vanishing_point: [0, -500] }

    lights:
        - &light_settings             { type: directional, direction: [1, 1, -.9], diffuse: 0.5, ambient: 0.85 }

    roads:
        - &highway1                   '#fed89d' #  largest hwy fill color="#fed89d"
        - &highway1_e                 '#000000' # '#eeb1b1' b1b1c1 ?
        - &highway_link1              '#fed89d' # #d19596  
        - &highway_casing1            '#cc9d5e' # '#D16768' largest hwy outline color="#ecbd7f"
        - &highway_tunnel1            '#D19596'       #85%
        - &highway_tunnel_casing1     [0.3, 0.3, 0.3] #95%
        - &highway_link_tunnel_casing1 '#D16768'      #95%
        - &rail1                      '#777'
        - &rail1_e                    '#bbb'
        - &rail2                      '#999'             # less important rail (service, sidings)
        - &major_road1                '#f2f2fc'  # #fbf2f2  #80%
        - &major_road1b               '#eeeefa'  # #faeeee  #10%
        - &major_road1c               white    #15%
        - &major_road2                white    #20%
        - &major_road2a               white    #17%
        - &major_road2b               white    #25%
        - &major_road3                white    #30%
        - &major_road4                white
        - &major_road5                '#989ae3'  # '#e3989a'
        - &major_casing1              '#ecbd7f'           # '#d19596' same as highway_casing1
        - &major_casing2              '#d19596'           # zoomed out
        - &major_tunnel1              grey                # light orange (major_route1)
        - &major_tunnel_casing1       [0.3, 0.3, 0.3]
        - &major_route1               '#fef0b7' # '#f8d8d9' Secondary roads that we really see - zoom 10 color="#fef0b7"
        - &major_route2               '#fef0b7' # '#e3989a'   at zoom 9        # zoomed out 
        - &minor_route                '#d19596'           # same as major_route
        - &minor_road1                white               # natural earth
        - &minor_road2                whtie               # natural earth, same as major_road2
        - &minor_road3                white
        - &minor_road4                white               # zoomed out
        - &minor_road5                white               # zoomed out, again
        - &minor_casing1              white               # same as highway_casing1
        - &minor_casing2              grey                # zoomed out
        - &minor_tunnel1              white
        - &minor_tunnel_casing1       [0.3, 0.3, 0.3]
        - &service_road1              white
        - &service_road2              white
        - &service_road_casing1       white
        - &service_road_casing2       white
        - &path1                      '#fff'
        - &path2                      '#fff'              # zoomed out
        - &path_casing1               grey
        - &path_bridge_casing1        black
        - &path_bridge_casing2        grey                # zoomed out
        - &path_steps1                '#bcc19e'
        - &path_steps1_b              '#e3e2e0'
        - &piste_easy                 '#d0d0d0'
        - &piste_intermediate         '#d0d0d0'
        - &piste_advanced             '#b3b3b3'
        - &piste_expert               '#a6a6a6'

    boundaries:
        - &country_boundary           '#fff'
        - &region_boundary            '#eee'
        - &subregion_boundary         '#eee'
        - &city_wall                  '#ccb38f'
        - &retaining_wall             '#d9c4a5'
        - &snow_fence                 '#d9c4a5'
        - &fence                      '#555555'

    areas:
        - &scene1      white               # map background, water
        - &water1      '#9dc3de'           # water
        - &water2      [.75,.75,.75]       # playa
        - &water1_o    '#9dc3de'           # water stroke
        - &water2_o    '#9dc3de'           # water stroke 2
        - &earth1      '#e3e2e0'           # land color
        - &earth1_r    '#666'              # land color road
        - &earth2      '#d8d3ca'           # urban
        - &earth2_v    false               # urban visibility
        - &earth2_e    '#d8d3ca'           # urban early
        - &earth2_e2   '#d4cfc6'           # urban early fade in
        - &earth2_e3   '#dbd8d3'           # urban early fade in 3
        - &earth2_ev   true                # urban early visibility
        - &green1      '#aed0b6'           # park (national park, local parks)
        - &green1_r    '#bddec5'           # park roads
        - &green1_b    '#9caca0'           # park buildings
        - &green1_bo   [.20, .20, .20]     # park building outlines
        - &green1_w    '#b7d7bf'           # wilderness area
        - &green1_ws   '#aed0b6'           # wilderness area stroke
        - &green1b     [0.80,0.80,0.80]    # park
        - &green2      '#b8d2bf'           # cemetery
        - &green2_r    [0.7,0.7,0.7]       # cemetery road
        - &green2_b    '#9caca0'           # cemetery, zoo buildings
        - &green2_bo   [.20, .20, .20]     # cemetery, zoo building outline
        - &green3      '#b8d2bf'           # golf course
        - &green4      '#e3e2e0'           # farm faint
        - &green4_v    false               # farm faint
        - &green5      '#e3e2e0'           # farm
        - &green6      '#94d59f'           # nature reserve
        - &green7      '#bddec5'           # forest
        - &green8      '#B4D8BD'           # conservation
        - &green9      '#cfe3d4'           # forest (landcover)
        - &green9_e    '#cfe3d4'           # forest (landcover) early
        - &green9_v    true                # forest (landcover) visibility
        - &green10     '#c7d4c0'           # sports_centre
        - &green11     '#d8ddd0'           # minor zoo related AOIs
        - &green11_o   '#aec7b5'           # minor zoo related AOIs outline
        - &green12     [0.584,0.843,0.792] # grass (common areas)
        - &orange1     '#bfb08e'           # stadium
        - &orange2     '#d8ccb0'           # pitch (play field)
        - &orange3     '#b9a597'           # racetrack (play field)
        - &brown1      '#D9CFC3'           # university
        - &brown1_r    '#cec1b2'           # university roads
        - &brown1_b    '#b1aca4'           # university buildings
        - &brown1_bo   [.30, .30, .30]     # university building outlines
        - &brown2      '#D9CFC3'           # school
        - &brown3      '#c7b7a2'           # playground
        - &red1        '#d9c3c3'           # hospital
        - &red1_r      '#d9c3c3'           # hospital roads
        - &red1_b      '#b5a7a7'           # hospital buildings
        - &red1_bo     [.30, .30, .30]     # hospital building outlines
        - &grey1       '#d7d7d7'           # retail, airport apron, parking, church
        - &grey1_e     '#cacaca'           # retail, airport apron, parking, church early zoom 14
        - &grey1_v     true                # retail, airport apron, parking, church
        - &grey2       orange              # airport runway
        - &grey3       '#d7d7d7'           # railway
        - &grey4       '#ffc52a'           # airport taxiway
        - &grey5       '#ffc52a'           # airport taxiway
        - &grey6       '#d1d1d1'           # industrial
        - &grey6_b     [.70, .70, .70]     # industrial buildings
        - &grey6_bo    [.20, .20, .20]     # industrial building outlines
        - &grey7       '#ecebe9'           # pedestrian, match minor road / path color
        - &grey7_v     true                # pedestrian visibility
        - &grey8       '#ecebe9'           # winter sports
        - &grey8_v     true                # winter sports visibility
        - &grey9       [.569,.69,.722,.5]  #[.7, .7, .7]        # transit platform
        - &grey9_o     [.5, .5, .5]        # transit platform outline
        - &grey9_v     true                # transit platform visibility
        - &grey10      '#d4cce6'           # generic major landuse (theme park, resort, aquarium, winery)
        - &grey10_o    '#bcb9c5'           # generic major landuse outline
        - &grey11      '#d7d7d7'           # generic minor landuse (attraction, artwork)
        - &grey11_o    '#cccccc'           # generic minor landuse outline
        - &grey12      '#cfcfcf'           # generic minor amusements (roller coasters, rides, slide, carousel)
        - &grey12_o    '#c5c5c5'           # generic minor amusements
        - &purple      '#d2d1cd'           # airport
        - &purple_v    true                # airport visibility
        - &purple_b    '#c2c3c4'           # airport buildings
        - &purple_bo   '#969798'           # airport buildings outline
        - &mystry1     '#d9d7c3'           # recreation ground
        - &yellow1     '#e7eda8'           # beach
        - &building1   [.8, .8, .8]        # building
        - &building2   [.6, .6, .6]        # building stroke
        - &building_o  5                   # building stroke order
        - &building_e  true                # building stroke order

    labels:
        - &text_fill          '#333'             # WHITE
        - &text_fill2         '#000'             # WHITE
        - &text_fill_road_e   '#555'             # WHITE
        - &text_fill_exits    '#D16768'          # motorway junctions, highway_casing1
        - &text_fill_building '#ccc'             # WHITE
        - &text_fill_address  '#aaa'             # HUH
        - &text_fill_water    '#4c89b5'          # blue
        - &text_fill_park     '#43a254'          # green
        - &text_fill_beach    '#99905c'          # green
        - &text_fill_piste    '#444'             # dark gray
        - &text_fill_piste_e  '#666'             # dark gray early
        - &text_fill_shield   white              # road shield fill color
        - &text_stroke        '#e4e1de'          # land color
        - &text_stroke_water  [0.9, 0.9, 0.9]    # water stroke color
        - &text_stroke_park   '#bddec5'          # park stroke color
        - &text_stroke_building  [.8, .8, .8]    # building stroke color
        - &text_stroke_address   [0.85, 0.85, 0.85]    # address stroke color
        # - &text_stroke_road1  '#f8c2c2'          # road stroke color highway
        - &text_stroke_road1  '#666'          # road stroke color highway
        - &text_stroke_road2  '#fbf2f2'          # road stroke color major road
        - &text_stroke_road3  '#f8d8d9'          # road stroke color major road route
        - &text_stroke_road4   white             # road stroke color minor road
        # - &text_stroke_shield  '#D16768'         # road shield stroke color &highway_casing1
        - &text_stroke_shield  '#666'         # road shield stroke color &highway_casing1
        - &townspot_sprite    townspot-l-rev     # depends on land color and text settings
        - &text_font_family  'Open Sans'        # branding in asperational Unicode, yo (or Helvetica)


textures:
    pois:
        url: images/refill@2x.png
        filtering: mipmap
        sprites:
            # define sprites: [x origin, y origin, width, height]
            'US:CA-1char': [488, 642, 82, 92]
            'US:CA-2char': [388, 642, 94, 94]
            'US:CA-3char': [268, 642, 114, 92]
            'US:CA-4char': [136, 642, 124, 92]
            'US:CA-5char': [0, 642, 128, 92]
            'US:I-1char': [908, 746, 90, 100]
            'US:I-2char': [798, 746, 102, 100]
            'US:I-3char': [658, 746, 132, 100]
            'US:I-4char': [512, 746, 140, 100]
            'US:I-5char': [352, 746, 152, 100]
            'US:NY-1char': [756, 386, 72, 88]
            'US:NY-2char': [660, 386, 88, 88]
            'US:NY-3char': [548, 386, 104, 86]
            'US:NY-4char': [424, 388, 116, 84]
            'US:NY-5char': [296, 386, 120, 86]
            'US:PA-1char': [216, 386, 72, 88]
            'US:PA-2char': [120, 386, 88, 88]
            'US:PA-3char': [0, 386, 112, 88]
            'US:PA-4char': [844, 254, 120, 88]
            'US:PA-5char': [708, 254, 128, 88]
            'US:US-1char': [256, 746, 88, 94]
            'US:US-2char': [144, 746, 106, 94]
            'US:US-3char': [0, 746, 138, 100]
            'US:US-4char': [748, 642, 156, 100]
            'US:US-5char': [576, 642, 164, 100]
            airport: [870, 0, 38, 38]
            aerodrome: [870, 0, 38, 38]
            aquarium: [732, 168, 38, 38]
            atm: [918, 126, 38, 38]
            bakery: [548, 168, 38, 38]
            bank: [964, 126, 38, 38]
            category-predicate-money: [964, 126, 38, 38]
            bar: [230, 168, 38, 38]
            pub: [230, 168, 38, 38]
            category-predicate-drink: [230, 168, 38, 38]
            baseball: [460, 84, 38, 38]
            basketball: [414, 84, 38, 38]
            beach: [598, 84, 38, 38]
            bench: [548, 0, 38, 38]
            bicycle: [872, 126, 38, 38]
            bicycle_rental: [872, 126, 38, 38]
            bicycle_rental_station: [872, 126, 38, 38]
            bicycle_parking: [644, 126, 38, 38]
            biergarten: [276, 210, 38, 38]
            brewery: [276, 210, 38, 38]
            books: [826, 126, 38, 38]
            bridge: [874, 84, 38, 38]
            buddhist: [736, 84, 38, 38]
            building: [414, 168, 38, 38]
            hangar: [414, 168, 38, 38]
            nursing_home: [414, 168, 38, 38]
            manor: [414, 168, 38, 38]
            apartments: [414, 168, 38, 38]
            care_home: [414, 168, 38, 38]
            bus_station: [778, 0, 38, 38]
            bus_stop: [778, 0, 38, 38]
            butcher: [920, 42, 38, 38]
            cafe: [502, 168, 38, 38]
            camp_site: [782, 84, 38, 38]
            summer_camp: [782, 84, 38, 38]
            capital-l: [544, 210, 32, 32]
            capital-m: [512, 210, 24, 24]
            capital-s: [484, 210, 20, 20]
            capital-xl: [632, 210, 40, 40]
            capital-xs: [460, 210, 16, 16]
            car: [780, 126, 38, 38]
            category-namespace-mobility: [780, 126, 38, 38]
            category-predicate-mobility: [780, 126, 38, 38]
            car_repair: [0, 168, 38, 38]
            car_sharing: [594, 0, 38, 38]
            castle: [414, 42, 38, 38]
            fort: [414, 42, 38, 38]
            cemetery: [690, 84, 38, 38]
            grave_yard: [690, 84, 38, 38]
            christian: [184, 126, 38, 38]
            cinema: [778, 168, 38, 38]
            clothes: [824, 168, 38, 38]
            fashion: [824, 168, 38, 38]
            college: [870, 168, 38, 38]
            university: [870, 168, 38, 38]
            confectionery: [0, 210, 38, 38]
            convenience: [46, 84, 38, 38]
            county_shield-1char: [404, 478, 72, 72]
            county_shield-2char: [300, 478, 96, 72]
            county_shield-3char: [160, 478, 132, 72]
            county_shield-4char: [0, 478, 152, 72]
            county_shield-5char: [836, 386, 180, 72]
            courthouse: [364, 0, 38, 38]
            department_store: [734, 126, 38, 38]
            drinking_water: [230, 210, 38, 38]
            dry_cleaning: [0, 84, 38, 38]
            electronics: [598, 126, 38, 38]
            computer: [598, 126, 38, 38]
            estate_agent: [138, 42, 38, 38]
            factory: [368, 168, 38, 38]
            industrial: [368, 168, 38, 38]
            chimney: [368, 168, 38, 38]
            substation: [368, 168, 38, 38]
            wastewater_plant: [368, 168, 38, 38]
            works: [368, 168, 38, 38]
            water_works: [368, 168, 38, 38]
            plant: [368, 168, 38, 38]
            generator: [368, 168, 38, 38]
            category-predicate-industry: [368, 168, 38, 38]
            fast_food: [138, 210, 38, 38]
            ferry: [824, 0, 38, 38]
            ferry_terminal: [824, 0, 38, 38]
            fire_station: [318, 0, 38, 38]
            fitness: [874, 42, 38, 38]
            fitness_station: [874, 42, 38, 38]
            florist: [138, 126, 38, 38]
            forest: [46, 210, 38, 38]
            natural_forest: [46, 210, 38, 38]
            nature_reserve: [46, 210, 38, 38]
            fountain: [276, 126, 38, 38]
            fuel: [960, 168, 38, 38]
            gallery: [640, 168, 38, 38]
            garden: [644, 84, 38, 38]
            generic: [368, 210, 38, 38]
            category-namespace-other: [368, 210, 38, 38]
            category-predicate-addressing: [368, 210, 38, 38]
            generic_shield-1char: [104, 554, 72, 72]
            generic_shield-2char: [0, 554, 98, 72]
            generic_shield-3char: [832, 478, 132, 72]
            generic_shield-4char: [672, 478, 152, 72]
            generic_shield-5char: [484, 478, 180, 72]
            gift: [92, 126, 38, 38]
            golf_course: [368, 84, 38, 38]
            government: [138, 168, 38, 38]
            townhall: [138, 168, 38, 38]
            public: [138, 168, 38, 38]
            embassy: [138, 168, 38, 38]
            category-predicate-civic: [138, 168, 38, 38]
            hairdresser: [46, 42, 38, 38]
            hardware: [828, 42, 38, 38]
            doityourself: [828, 42, 38, 38]
            painter: [828, 42, 38, 38]
            historical: [46, 126, 38, 38]
            hospital: [184, 0, 38, 38]
            category-namespace-health: [184, 0, 38, 38]
            category-predicate-health: [184, 0, 38, 38]
            hotel: [732, 0, 38, 38]
            motel: [732, 0, 38, 38]
            hostel: [732, 0, 38, 38]
            category-predicate-sleep: [732, 0, 38, 38]
            ice_cream: [322, 210, 38, 38]
            information: [414, 210, 38, 38]
            jewelry: [736, 42, 38, 38]
            jewish: [46, 0, 38, 38]
            landmark: [272, 0, 38, 38]
            memorial: [272, 0, 38, 38]
            monument: [272, 0, 38, 38]
            tower: [272, 0, 38, 38]
            beacon: [272, 0, 38, 38]
            laundry: [690, 42, 38, 38]
            library: [0, 0, 38, 38]
            light_rail: [686, 0, 38, 38]
            tram_stop: [686, 0, 38, 38]
            lighthouse: [230, 84, 38, 38]
            liquor: [506, 126, 38, 38]
            alcohol: [506, 126, 38, 38]
            mall: [644, 42, 38, 38]
            marina: [92, 168, 38, 38]
            dock: [92, 168, 38, 38]
            mineshaft: [782, 42, 38, 38]
            quarry: [782, 42, 38, 38]
            adit: [782, 42, 38, 38]
            mobile_phone: [506, 42, 38, 38]
            museum: [0, 126, 38, 38]
            observatory: [0, 126, 38, 38]
            music: [368, 42, 38, 38]
            muslim: [92, 0, 38, 38]
            newspaper: [322, 42, 38, 38]
            kiosk: [322, 42, 38, 38]
            office: [552, 84, 38, 38]
            insurance: [552, 84, 38, 38]
            company: [552, 84, 38, 38]
            category-predicate-service: [552, 84, 38, 38]
            optician: [276, 42, 38, 38]
            park: [230, 126, 38, 38]
            category-predicate-nature: [230, 126, 38, 38]
            parking: [690, 126, 38, 38]
            peak: [184, 84, 38, 38]
            pet: [230, 42, 38, 38]
            pharmacy: [966, 42, 38, 38]
            photographic_laboratory: [184, 42, 38, 38]
            photographer: [184, 42, 38, 38]
            pier: [640, 0, 38, 38]
            place_of_worship: [276, 168, 38, 38]
            chapel: [276, 168, 38, 38]
            wayside_shrine: [276, 168, 38, 38]
            category-predicate-religion: [276, 168, 38, 38]
            playground: [460, 42, 38, 38]
            police: [226, 0, 38, 38]
            post_office: [322, 168, 38, 38]
            recycling: [92, 42, 38, 38]
            restaurant: [92, 210, 38, 38]
            category-namespace-eat_and_drink: [92, 210, 38, 38]
            category-predicate-eat: [92, 210, 38, 38]
            retail: [598, 42, 38, 38]
            store: [598, 42, 38, 38]
            category-namespace-shop_and_service: [598, 42, 38, 38]
            category-predicate-shop: [598, 42, 38, 38]
            ruin: [502, 0, 38, 38]
            ruins: [502, 0, 38, 38]
            archaeological_site: [502, 0, 38, 38]
            school: [506, 84, 38, 38]
            kindergarten: [506, 84, 38, 38]
            category-namespace-education_and_religion: [506, 84, 38, 38]
            category-predicate-education: [506, 84, 38, 38]
            sdk_shield-1char: [832, 554, 84, 84]
            sdk_shield-2char: [712, 554, 112, 84]
            sdk_shield-3char: [560, 554, 144, 84]
            sdk_shield-4char: [384, 554, 168, 84]
            sdk_shield-5char: [184, 554, 192, 84]
            shoemaker: [552, 42, 38, 38]
            ski: [322, 126, 38, 38]
            ski_rental: [322, 126, 38, 38]
            ski_school: [322, 126, 38, 38]
            winter_sports: [322, 126, 38, 38]
            slipway: [138, 84, 38, 38]
            soccer: [322, 84, 38, 38]
            sports: [0, 42, 38, 38]
            sports_centre: [184, 168, 38, 38]
            pitch: [184, 168, 38, 38]
            recreation_ground: [184, 168, 38, 38]
            spring: [276, 84, 38, 38]
            hot_spring: [276, 84, 38, 38]
            stadium: [414, 126, 38, 38]
            subway_entrance: [456, 0, 38, 38]
            supermarket: [552, 126, 38, 38]
            greengrocer: [552, 126, 38, 38]
            swimming_pool: [460, 126, 38, 38]
            swimming_area: [460, 126, 38, 38]
            tailor: [962, 0, 38, 38]
            tennis: [368, 126, 38, 38]
            theatre: [594, 168, 38, 38]
            category-predicate-fun: [594, 168, 38, 38]
            theme_park: [966, 84, 38, 38]
            amusement_ride: [966, 84, 38, 38]
            toilets: [828, 84, 38, 38]
            townspot-l: [932, 210, 32, 32]
            townspot-l-rev: [760, 210, 32, 32]
            townspot-m: [900, 210, 24, 24]
            townspot-m-rev: [728, 210, 24, 24]
            townspot-s: [872, 210, 20, 20]
            townspot-s-rev: [700, 210, 20, 20]
            townspot-xl: [972, 210, 40, 40]
            townspot-xl-rev: [800, 210, 40, 40]
            townspot-xs: [848, 210, 16, 16]
            townspot-xs-rev: [680, 210, 12, 12]
            toys: [916, 0, 38, 38]
            traffic_signals: [916, 168, 38, 38]
            train_station: [410, 0, 38, 38]
            station: [410, 0, 38, 38]
            train: [410, 0, 38, 38]
            category-predicate-transport: [410, 0, 38, 38]
            ux-current-location: [294, 254, 88, 88]
            ux-locate-off: [628, 254, 72, 72]
            ux-locate-on: [548, 254, 72, 72]
            ux-route-arrow: [0, 254, 128, 128]
            ux-route-start: [214, 254, 72, 92]
            ux-route-stop: [136, 254, 72, 92]
            ux-search-active: [388, 254, 72, 108]
            ux-search-inactive: [468, 254, 72, 108]
            ux-transit-stop: [584, 212, 42, 36]
            veterinary: [138, 0, 38, 38]
            viewpoint: [686, 168, 38, 38]
            category-namespace-do_and_see: [686, 168, 38, 38]
            category-predicate-attraction: [686, 168, 38, 38]
            vineyard: [46, 168, 38, 38]
            volcano: [92, 84, 38, 38]
            wine: [184, 210, 38, 38]
            winery: [456, 168, 38, 38]
            zoo: [920, 84, 38, 38]



camera:
    type: isometric
    axis: [0, .1] # very small building extrusion

#lights:
#    light1:
#        type: directional
#        direction: [1, 1, -.9]
#        diffuse: .5
#        ambient: .85

styles:
    dashed:
        base: lines
        dash: [1.25, 1.25]
        dash_background_color: [0.808,0.860,0.851]
    dashed_big:
        base: lines
        dash: [2.0, 1.0]
        dash_background_color: [0.808,0.860,0.851]
    dashed_steps:
        base: lines
        dash: [0.25, 0.25]
        dash_background_color: [0.882,0.878,0.871]
    lines_transparent:
        base: lines
        blend: overlay
    outline_transparent:
        base: lines
        blend: overlay
    polygons_transparent:
        base: polygons
        blend: overlay
    icons:
        base: points
        texture: pois
        interactive: true
        blend_order: 1
    text-blend-order:
        base: text
        blend_order: 1
    ux-route-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    ux-route-line-dash-overlay:
        base: lines
        blend: overlay
        blend_order: 0
        dash: [2, 1]
    ux-transit-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    ux-location-gem-overlay:
        base: points
        texture: pois
        interactive: true
        blend: overlay
        blend_order: 2
    ux-icons-overlay:
        base: points
        texture: pois
        interactive: true
        blend: overlay
        blend_order: 3
    sdk-point-overlay:
        base: points
        texture: pois
        interactive: true
        blend: overlay
        blend_order: 3
    sdk-shield-overlay:
        base: points
        texture: pois
        interactive: true
        blend: overlay
        blend_order: 3
    sdk-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    sdk-polygon-overlay:
        base: polygons
        blend: overlay
        blend_order: 0

# scene:
#     background:
#         color: *scene1

# fonts:
#     Open Sans:
#         - weight: 300 # Light
#           url: fonts/OpenSans-Light.woff
#         - weight: normal # Regular
#           url: fonts/OpenSans-Regular.woff
#         - weight: normal # Regular
#           style: italic
#           url: fonts/OpenSans-Italic.woff
#         - weight: 600 # Semi Bold
#           url: fonts/OpenSans-Semibold.woff
#         - weight: 600 # Semi Bold
#           style: italic
#           url: fonts/OpenSans-SemiboldItalic.woff
#         - weight: bold
#           url: fonts/OpenSans-Bold.woff
#     Montserrat:
#         - weight: normal
#           #url: https://fonts.gstatic.com/s/montserrat/v7/zhcz-_WihjSQC0oHJ9TCYL3hpw3pgy2gAi-Ip7WPMi0.woff
#           url: fonts/Montserrat-Regular.woff




layers:

    # Map overlays for styling the server response (using special source layer names) for route line, current location, and search result pins
    # omitted

    # Used by the SDK to place point, line, and polygon overlays on the map
    mz_default_point:
        data: { source: mz_default_point }
        draw:
            sdk-point-overlay:
                interactive: true
                sprite: ux-search-active
                size: [36px,54px]
                collide: false
                anchor: top
                transition:
                    [show, hide]:
                        time: 0s
    mz_default_shield:
        data: { source: mz_default_shield }
        draw:
            sdk-shield-overlay:
                interactive: true
                sprite: |
                    function() {
                        if( feature.ref ) {
                            return ('sdk_shield-' + feature.ref.length + 'char');
                        } else {
                            return ('sdk_shield-' + feature.name.length + 'char');
                        }
                    }
                sprite_default: sdk_shield-1char
                color: global.sdk_shield_color
                collide: false
                transition:
                    [show, hide]:
                        time: 0s
                text:
                    # offset: [0px, -1px]
                    text_source: |
                        function() {
                            if( feature.ref ) {
                                return feature.ref;
                            } else {
                                return feature.name;
                            }
                        }
                    anchor: center
                    font:
                        family: Montserrat
                        fill: global.sdk_shield_text_color
                        style: bold
                        size: [[7,7px],[12,8px],[16,11px]]

        width_1char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 1);
                    } else {
                        return (feature.name.length === 1);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[16px,16px]],[13,[18px,18px]],[16,[21px,21px]]]
        width_2char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 2);
                    } else {
                        return (feature.name.length === 2);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[21px,16px]],[13,[24px,18px]],[16,[28px,21px]]]
        width_3char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 3);
                    } else {
                        return (feature.name.length === 3);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[27px,16px]],[13,[31px,18px]],[16,[36px,21px]]]
        width_4char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 4);
                    } else {
                        return (feature.name.length === 4);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[32px,16px]],[13,[36px,18px]],[16,[41px,21px]]]
        width_5char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 5);
                    } else {
                        return (feature.name.length === 5);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[37px,16px]],[13,[41px,18px]],[16,[48px,21px]]]
        # this is kinda a hack
        width_longggggg:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length > 5);
                    } else {
                        return (feature.name.length > 5);
                    }
                }
            draw:
                sdk-shield-overlay:
                    visible: false
    mz_default_line:
        data: { source: mz_default_line }
        draw:
            sdk-line-overlay:
                color: '#06a6d4'
                order: 503
                width: 3px
    mz_default_polygon:
        data: { source: mz_default_polygon }
        draw:
            sdk-polygon-overlay:
                color: [0.02,0.65,0.82,0.5]  #'#06b1e2'
                order: 501
            sdk-line-overlay:
                color: '#06a6d4'
                order: 502
                width: 0px

    # Basemap styling
    # earth:
    # ocean-water:
    # water-not-ocean:
    # subway-light-rail:
    # railway-late:
    # platforms:


    roads:
        data: { source: mapzen, layer: roads }
        filter: { not: { kind: rail } }
        draw:
            lines:
                interactive: true
                #color: black
                width: 1px
                order: function() { return feature.sort_rank; }
                # but give them all the same outline
                outline:
                    order: 352
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                font:
                    family: *text_font_family
                    weight: 400
                    fill: *text_fill

        early-other:
            filter: { $zoom: { max: 12 }, kind: [major_road] }
            draw:
                lines:
                    order: 351
        early-minor_road:
            filter: { $zoom: { max: 15 }, kind: [minor_road] }
            draw:
                lines:
                    order: 350
        bridges-tunnels:
            filter: { any: [is_bridge: true, is_tunnel: true] }
            draw:
                lines:
                    #cap: butt
                    outline:
                        # except bridges and tunnels, their outlines should also self-sort
                        order: function() { return feature.sort_rank; }

        # default outlines starting at zoom 16
        default-outline-width:
            filter: { $zoom: { min: 16 } }
            draw:
                lines:
                    outline:
                        width: function () { return 3/16 * Math.log($zoom); }

        natural_earth_highways:
            filter: { source: 'naturalearthdata.com' }
            draw:
                lines:
                    # put highways on top of all other roads
                    cap: round
                    join: round
                    color: [[7,*highway1_e],[8,*major_road3]]
                    width: [[5, 1px], [7, 1.4px], [9, 2px], [14, 3px], [16, 4px], [17, 10m]]
            major_road:
                filter: { kind: major_road }
                draw:
                    lines:
                        color: *highway1_e
                        width: [[5, 0.45px], [6, 0.75px]]
            minor_road:
                filter: { kind: minor_road }
                draw:
                    lines:
                        color: [[12, *minor_road1], [17, *minor_road2]]
                        width: [[12, 1.0px], [14, 1.5px], [15, 3px], [16, 5m]]
        highway:
            filter: { kind: highway, $zoom: { min: 8 } }
            draw:
                lines:
                    #cap: [[0,butt],[15,round]]
                    #join: round
                    color: *highway1
                    width: [[8, 2px], [9, 2.5px], [14, 4.0px], [15, 6.0px], [16, 6.5px], [17, 20m]]
                    outline:
                        color: *highway_casing1
                        width: [[9, 0.5px], [12, 1px], [16, 2px], [18, 6px]]
            link:
                filter: { is_link: true } # on- and off-ramps, etc
                draw:
                    lines:
                        color: *highway_link1
                        width: [[9, 1px], [14, 2.5px], [16, 4px], [18, 9m]]
                        cap: butt
                        outline:
                            color: *highway_casing1
                            width: [[13, 0px], [14, 1px], [18, 1.5px]]
                early_link:
                    filter: { $zoom: { max: 15 } }
                    draw:
                        lines:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: 352
                tunnel-link:
                    filter: {is_tunnel: true, $zoom: {min: 13} }
                    draw:
                        lines:
                            color: *highway_tunnel1
                            outline:
                                color: *highway_tunnel_casing1
            tunnel:
                filter: {is_tunnel: true, $zoom: {min: 13} }
                draw:
                    lines:
                        color: *highway_tunnel1
                        outline:
                            color: *highway_tunnel_casing1
            highway_bridge:
                filter: {is_bridge: true}
                draw:
                    lines:
                        cap: round
                        outline:
                            cap: butt

            labels-highway-z13:
                filter:
                    $zoom: 13
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        #text_source: ref
                        #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: *text_fill
                            size: 13px
                            stroke: { color: *text_stroke_road1, width: 4 }
            labels-highway-z14:
                filter:
                    $zoom: 14
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        #text_source: ref
                        #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: *text_fill
                            size: 11px
                            stroke: { color: *text_stroke_road1, width: 4 }
            # labels-highway-z15:
            # labels-highway-z16:
            # labels-highway-z18:

        major_road:
            filter: { kind: major_road }
            # default style
            draw:
                lines:
                    #cap: round
                    #join: round
                    color: [[8, *major_road4], [13, major_road2], [17, *major_road1]]
                    width: [[13, 0px], [14, 2px], [16, 2.5px], [19, 8m]]
                    outline:
                        color: [[0,*earth1_r],[13,*major_casing1]]
                        width: [[12, 0px], [13, .5px], [15, 1px]]
            trunk_primary:
                filter: { kind_detail: [trunk, primary] }
                draw:
                    lines:
                        color: [[8, *major_road5], [9, *major_road2b], [13, *major_road2], [14, *major_road1c], [15, *major_road1b], [17, *major_road1]]
                        width: [[8, 0.6px], [9, 0.75px], [10, 1.5px], [13, 2.5px], [14, 4.5px], [15, 5.5px], [16, 7.0px], [19, 14m]]
                        outline:
                            width: [[8, 0px], [9, 0.5px], [10, 1px], [12, 1.25px], [14, 1.5px], [16, 2.5px], [18, 4.5px]]
                routes:
                    filter: { ref: true }
                    draw:
                        lines:
                            color: [[8,*major_road5],[9,*major_route2],[10,*major_route1]]
                            width: [[8, 1.0px], [9, 1.5px], [10, 2.0px], [14, 3.5px], [15, 4.5px], [16, 6.0px], [17, 12m]]
                            outline:
                                color: *highway_casing1
                                width: [[9, 0px], [10, 0.5px], [11, 0.75px], [12, 1px], [16, 2px], [18, 4.5px]]
                    national-routes:
                        filter: { network: ["US:US", "US:I"] }
                        draw:
                            lines:
                                color: [[8,*major_route2],[9,*major_route2],[10,*major_route1]]
                                width: [[8, 2.0px], [10, 2.5px], [14, 3.5px], [15, 4.5px], [16, 6.0px], [17, 12m]]
                    tunnel:
                        filter: {is_tunnel: true, $zoom: {min: 13} }
                        draw:
                            lines:
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    labels-trunk_primary-route-z10:
                        filter: { $zoom: [10] }
                        draw:
                            text-blend-order:
                                priority: 51
                                visible: *text_visible_trunk_primary_e2
                                text_source: ref
                                font:
                                    fill: *text_fill_shield
                                    size: 8px
                                    stroke: { color: *text_stroke_shield, width: 2 }
                    labels-trunk_primary-route-z11-z12:
                        filter: { $zoom: [11,12] }
                        draw:
                            text-blend-order:
                                priority: 51
                                visible: *text_visible_trunk_primary_e
                                text_source: ref
                                font:
                                    fill: *text_fill_shield
                                    size: 9px
                                    stroke: { color: *text_stroke_shield, width: 2 }
                    labels-trunk_primary-route-z13-z14:
                        filter: { $zoom: [13,14] }
                        draw:
                            text-blend-order:
                                priority: 51
                                visible: *text_visible_trunk_primary
                                #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: *text_fill
                                    size: 11px
                                    stroke: { color: *text_stroke_road3, width: 2px }
                    labels-trunk_primary-route-z15:
                        filter: { $zoom: [15] }
                        draw:
                            text-blend-order:
                                priority: 51
                                visible: *text_visible_trunk_primary
                                #text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: *text_fill
                                    size: 12px
                                    stroke: { color: *text_stroke_road3, width: 2px }
                labels-trunk_primary-z11-z12:
                    filter:
                        $zoom: [11,12]
                    draw:
                        text-blend-order:
                            priority: 51
                            visible: *text_visible_trunk_primary_e
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 11px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z13-z14:
                    filter:
                        $zoom: [13,14]
                    draw:
                        text-blend-order:
                            priority: 51
                            visible: *text_visible_trunk_primary
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke_road2, width: 4 }

                # labels-trunk_primary-z15:
                # labels-trunk_primary-z16:
                # labels-trunk_primary-z17:
                # labels-trunk_primary-z18:

            link:
                filter: { is_link: true } # on- and off-ramps, etc
                draw:
                    lines:
                        color: [[8, *major_road3], [9, *major_road2b], [14, *major_road2], [15, *major_road1b], [17, *major_road1]]
                        width: [[10, 1px], [14, 3px], [16, 4.5px], [18, 10m]]
                        outline:
                            color: *major_casing1
                            width: [[10, 1px], [14, 1px], [18, 1.5px]]
            tunnel:
                filter: {is_tunnel: true, $zoom: {min: 13} }
                draw:
                    lines:
                        color: *major_tunnel1
                        outline:
                            color: *major_tunnel_casing1
            secondary:
                filter: { kind_detail: secondary }
                draw:
                    lines:
                        color: [[13,*major_road3], [14,*major_road2b], [15,*major_road1b], [17,*major_road1]]
                        width: [[11, 1.0px], [12, 1.0px], [13, 2.0px], [14, 3.5px], [15, 4.5px], [16, 7.0px], [19, 16m]]
                        outline:
                            width: [[11, 0px], [12, .75px], [13, 1.0px], [14, 1.75px], [15, 2.0px], [16, 3.0px], [18, 4.0px]]
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: [[8,*major_road5],[9,*major_route2],[10,*major_route1]]  #*minor_route
                    tunnel:
                        filter: {is_tunnel: true, $zoom: {min: 13} }
                        draw:
                            lines:
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    labels-secondary-routes:
                        filter: { $zoom: [12,13] }
                        draw:
                            text-blend-order:
                                priority: 56
                                visible: *text_visible_secondary_e
                                #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                                font:
                                    fill: *text_fill_road_e
                                    size: 13px
                                    stroke: { color: *text_stroke_road3, width: 2 }
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[11,*green1_r],[12,*minor_road3],[14,*minor_road3]]
                            outline:
                                color: [[14,*green1_r],[15,*major_casing1]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                labels-secondary-z13:
                    filter:
                        $zoom: [12,13,14]
                    draw:
                        text-blend-order:
                            priority: 56
                            visible: *text_visible_secondary_e
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 10px
                                stroke: { color: *text_stroke_road4, width: 1 }
                # labels-secondary-z15:
                # labels-secondary-z16:
                # labels-secondary2:
                # labels-secondary3:

            tertiary:
                filter: { kind_detail: [tertiary, tertiary_link] }
                draw:
                    lines:
                        color: [[13,*major_road2b], [14,*major_road2a], [15,*major_road1b], [17,*major_road1]]
                        width: [[11, 0.5px], [12, .75px], [14, 2.5px], [15, 4.0px], [16, 6.5px], [17, 7.5px], [19, 14m]]
                        outline:
                            width: [[11, 0px], [13, 0.5px], [14, 1.0px], [15, 1.5px], [16, 2.0px], [18, 3.5px]]
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: *minor_route
                    tunnel:
                        filter: {is_tunnel: true, $zoom: {min: 13} }
                        draw:
                            lines:
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                link:
                    filter: { is_link: true } # on- and off-ramps, etc
                    draw:
                        lines:
                            color: *major_road1
                            width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            outline:
                                color: [[12,*major_casing2],[13,*major_casing1]]
                                width: [[12, 0px], [14, .25px], [16, 1.0px], [18, 4.0px]]
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[11,*green1_r],[12,*minor_road3],[14,*minor_road3]]
                            outline:
                                color: [[14,*green1_r],[15,*major_casing1]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                labels-tertiary-z12-z13-z14:
                    filter: { $zoom: [12,13,14] }
                    draw:
                        text-blend-order:
                            priority: 57
                            visible: *text_visible_tertiary_e
                            #text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill_road_e
                                size: 11px
                                stroke: { color: *text_stroke_road4, width: 2 }
                    labels-tertiary-z12:
                        filter: { $zoom: [12] }
                        draw:
                            text-blend-order:
                                font:
                                    size: 10px
                                    stroke: { color: *text_stroke_road4, width: 1 }
                    labels-tertiary-z13:
                        filter: { $zoom: [13] }
                        draw:
                            text-blend-order:
                                font:
                                    size: 10px
                                    stroke: { color: *text_stroke_road4, width: 1 }

                # labels-tertiary-z15:
                # labels-tertiary-z16-z17:
                # labels-tertiary-z18:

        minor_road:
            filter: { kind: minor_road, not: { kind_detail: service } }
            draw:
                lines:
                    color: [[11, *minor_road5], [13, *minor_road4], [15, *minor_road3]]
                    width: [[11, 0.5px], [12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.5px], [16, 8m]]
                    outline:
                        width: [[14, 0px], [15, 0.5px], [17, 0.75px], [18, 1.5px], [19, 2px]]
                        color: [[16,*minor_casing1],[17,*minor_casing2]]
            round:
                filter: { $zoom: { min: 17 } }
                draw:
                    lines:
                        cap: round
                        join: round

            in_park:
                filter: { landuse_kind: [park,protected_area,nature_reserve,conservation,golf_course,garden,wood,farmland,farm] }
                draw:
                    lines:
                        #width: [[11, 0.5px], [12, 1.0px], [13, 1.2px], [14, 1.75px], [15, 2.5px], [16, 8m]]
                        color: [[11,*green1_r],[12,*green1_r],[14,*minor_road3]]
                        outline:
                            color: [[14,*green1_r],[18,*minor_casing1]]
                            width: [[12, 0px], [13, 0.5px], [14, 0.75px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        #color: [[11,*brown1_re],[13,*brown1_r],[14,*minor_road3]]
                        outline:
                            color: *brown1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        #color: [[11,*red1_r],[13,*red1_r],[14,*minor_road3]]
                        outline:
                            color: *red1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]

            tunnel:
                filter: {is_tunnel: true, $zoom: {min: 13} }
                draw:
                    lines:
                        cap: butt
                        color: *minor_tunnel1
                        outline:
                            color: *minor_tunnel_casing1
            minor_road_bridge:
                filter: { is_bridge: true }
                draw:
                    lines:
                        cap: round
                        outline:
                            cap: butt

            # labels-minor_road:

        service_road:
            filter: { kind: minor_road, kind_detail: service }
            draw:
                lines:
                    #cap: round
                    #join: round
                    color: [[0,*service_road2],[18,*service_road2]]
                    width: [[13,0.5px],[15, 1px], [16, 1.5px], [18, 4m], [19, 4.5m]]
                    outline:
                        color: [[0,*service_road_casing1],[18,*service_road_casing2]]
                        width: [[15, 0px], [16, 0.5px], [17, 1.0px], [18, 1.75px]]
            in_park:
                filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        #color: *green1_r
                        outline:
                            color: *green1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
            in_cemetery_garden:
                filter: { landuse_kind: [cemetery,garden] }
                draw:
                    lines:
                        outline:
                            color: *green2_r
                            width: [[13, 0.25px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        #color: *brown1_r
                        outline:
                            color: *brown1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        #color: *red1_r
                        outline:
                            color: *red1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            labels-service_road:
                filter: { $zoom: 17 }
                draw:
                    text-blend-order:
                        priority: 60
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            #stroke: { color: *text_stroke_road4, width: 4 }
            labels-service_road-z18:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 60
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            fill: *text_fill2
                            size: 12px
                            #stroke: { color: *text_stroke_road4, width: 4 }


        shields:
            filter:
                $zoom: { min: 6 }
                #
                # United State looks great with shield_text alone, but...
                #
                #shield_text: true    # some roads don't have shield text, deal with that later
                #
                # Europe doesn't have many network relations set, so we could look for either
                # shield_text or ref (with no shield_text) but...
                # that makes United States look a bit funky with `(xxx)` and generic shields
                # showing up in fields of custom state shields like US:CA and US:NY
                #
                any:
                    - shield_text: true    # some roads don't have shield text, deal with that later
                    - all:
                        - shield_text: false    # some roads don't have shield text, deal with that later
                        - ref: true
                        - kind_detail: [motorway, trunk, primary, secondary, tertiary]
            # default
            draw:
                icons:
                    # you need to match any custom shield to the vector tile `network` values
                    sprite: |
                        function() {
                            if( feature.shield_text ) {
                                return ('generic_shield-' + feature.shield_text.length + 'char');
                            } else {
                                return ('generic_shield-' + feature.ref.length + 'char');
                            }
                        }
                    sprite_default: generic_shield-5char
                    priority: 58
                    # Size is specified below, and limited to 5 char in another filter
                    repeat_group: shields
                    repeat_distance: [[8,90px],[10,40px],[13,30px]]
                    placement: midpoint
                    placement_min_length_ratio:
                        - [8, 0.1]
                        - [9, 0.25]
                        - [10, 0.25]
                        - [11, 0.15]
                        - [12, 1]
                        - [13, 1.50]
                        - [14, 2.0]
                    cull_from_tile: true
                    visible: false
                    text:
                        offset: [0px, -0.5px]
                        repeat_distance: 200px
                        anchor: center
                        text_source: |
                            function() {
                                if( feature.shield_text ) {
                                    return feature.shield_text;
                                } else {
                                    return feature.ref;
                                }
                            }
                        font:
                            family: Montserrat
                            fill: [0.308,0.308,0.308]
                            size: [[7,7px],[12,8px],[16,11px]]

            default_priority_highway:
                filter:
                    all:
                        - kind_detail: motorway
                        - $zoom: { min: 9 }
                draw:
                    icons:
                        priority: 47
                        #color: yellow
                        visible: *text_visible_shields

            default_priority_trunk:
                filter:
                    all:
                        - kind_detail: [trunk]
                        - $zoom: { min: 10 }
                draw:
                    icons:
                        priority: 48
                        #color: red
                        visible: *text_visible_shields
            default_priority_primary:
                filter:
                    all:
                        - kind_detail: [primary]
                        - $zoom: { min: 12 }
                draw:
                    icons:
                        priority: 49
                        #color: aqua
                        visible: *text_visible_shields
            default_priority_trunk_secondary:
                filter:
                    all:
                        - kind_detail: [secondary]
                        - $zoom: { min: 12 }
                draw:
                    icons:
                        priority: 53
                        #color: blue
                        visible: *text_visible_shields
            default_priority_trunk_tertiary:
                filter:
                    all:
                        - kind_detail: tertiary
                        - $zoom: { min: 13 }
                draw:
                    icons:
                        priority: 55
                        #color: green
                        visible: *text_visible_shields

            width_1char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 1)
                        } else {
                            return (feature.ref.length === 1)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[14px,14px]],[13,[16px,16px]],[16,[18px,18px]]]
            width_2char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 2)
                        } else {
                            return (feature.ref.length === 2)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[18px,14px]],[13,[20px,15px]],[16,[24px,18px]]]
            width_3char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 3)
                        } else {
                            return (feature.ref.length === 3)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[25px,14px]],[13,[27px,15px]],[16,[33px,18px]]]
            width_4char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 4)
                        } else {
                            return (feature.ref.length === 4)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[29px,14px]],[13,[31px,15px]],[16,[38px,18px]]]
                # London sucks
                early:
                    filter: { $zoom: { max: 14 } }
                    draw:
                        icons:
                            visible: false
            width_5char:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length === 5)
                        } else {
                            return (feature.ref.length === 5)
                        }
                    }
                draw:
                    icons:
                        size: [[6,[34px,14px]],[13,[37px,15px]],[16,[45px,18px]]]
                # London sucks
                early:
                    filter: { $zoom: { max: 14 } }
                    draw:
                        icons:
                            visible: false
            # this is kinda a hack
            width_longggggg:
                filter: |
                    function() {
                        if( feature.shield_text ) {
                            return (feature.shield_text.length > 5)
                        } else {
                            return (feature.ref.length > 5)
                        }
                    }
                draw:
                    icons:
                        visible: false
            #
            # Now for the good stuff
            #
            legit-shields:
                filter: { shield_text: true }
                # draw:
                #     icons:
                #         color: pink

                # US Interstate roads
                US-I:
                    filter:
                        network: 'US:I'
                    draw:
                        icons:
                            # you need to match any custom shield to the vector tile `network` values
                            sprite: function() { return (feature.network + '-' + feature.shield_text.length + 'char'); }
                            priority: 46
                            visible: *text_visible_shields
                            text:
                                offset: [0px, 0.5px]
                                font:
                                    fill: [0.308,0.308,0.308]
                                    size: [[7,8px],[13,9px],[15,11px]]
                    width_1char:
                        filter: function() { return (feature.shield_text.length === 1) }
                        draw:
                            icons:
                                size: [[6,[15px,18px]],[13,[17px,20px]],[15,[22px,25px]]]
                    width_2char:
                        filter: function() { return (feature.shield_text.length === 2) }
                        draw:
                            icons:
                                size: [[6,[18px,18px]],[13,[20px,20px]],[15,[25px,25px]]]
                    width_3char:
                        filter: function() { return (feature.shield_text.length === 3) }
                        draw:
                            icons:
                                size: [[6,[23px,18px]],[13,[26px,20px]],[15,[33px,25px]]]
                    width_4char:
                        filter: function() { return (feature.shield_text.length === 4) }
                        draw:
                            icons:
                                size: [[6,[25px,18px]],[13,[27px,20px]],[15,[35px,25px]]]
                    width_5char:
                        filter: function() { return (feature.shield_text.length === 5) }
                        draw:
                            icons:
                                size: [[6,[26px,18px]],[13,[30px,20px]],[15,[38px,25px]]]
                # US Federal Routes
                US-US:
                    filter:
                        network: ['US:US','US:US:Business', 'US:US:Truck', 'US:US:Alternate']
                        $zoom: { min: 7 }
                    draw:
                        icons:
                            # you need to match any custom shield to the vector tile `network` values
                            sprite: |
                                function() { return ('US:US-' + feature.shield_text.length + 'char'); }
                            priority: 47
                            cull_from_tile: true
                            visible: *text_visible_shields
                            text:
                                offset: [0px, -0.7px]
                                font:
                                    fill: [0.380,0.318,0.312]
                                    size: [[7,8px],[13,9px],[15,11px]]
                    width_1char:
                        filter: function() { return (feature.shield_text.length === 1) }
                        draw:
                            icons:
                                size: [[6,[15px,17px]],[13,[17px,19px]],[15,[22px,24px]]]
                    width_2char:
                        filter: function() { return (feature.shield_text.length === 2) }
                        draw:
                            icons:
                                size: [[6,[18px,17px]],[13,[20px,19px]],[15,[26px,24px]]]
                    width_3char:
                        filter: function() { return (feature.shield_text.length === 3) }
                        draw:
                            icons:
                                size: [[6,[22px,17px]],[13,[25px,19px]],[15,[34px,25px]]]
                    width_4char:
                        filter: function() { return (feature.shield_text.length === 4) }
                        draw:
                            icons:
                                size: [[6,[25px,17px]],[13,[29px,19px]],[15,[39px,25px]]]
                    width_5char:
                        filter: function() { return (feature.shield_text.length === 5) }
                        draw:
                            icons:
                                size: [[6,[27px,17px]],[13,[30px,19px]],[15,[41px,25px]]]
                # US State Routes
                # US-states:
                #     # Match state highways: `US:??`
                #     filter: |
                #         function() {
                #             return feature.shield_text &&
                #                 /^US:(?!US)\w\w$/.test(feature.network)
                #         }
                #     draw:
                #         icons:
                #             # you need to match any custom shield to the vector tile `network` values
                #             #priority: 48
                #             visible: *text_visible_shields

                # US-CA:
                # US-NY:
                # US-PA:

                # USA County Routes
                # US-counties:

    places:
        data: { source: mapzen, layer: places }
        filter:
            name: true
        draw:
            icons:
                text:
                    # text_source: global.ux_language_text_source
                    visible: false
                    buffer: 3px
                    font:
                        family: *text_font_family
                        fill: *text_fill
            # NOTE: This is a hack for localities because of an icon & text bug, see note below
            text-blend-order:
                # text_source: global.ux_language_text_source
                visible: false    # labels are enabled by each layer below
                buffer: 3px
                font:
                    family: *text_font_family
                    fill: *text_fill
            # END NOTE

        country:
            filter:
                kind: country
                $zoom: { min: 3, max: 9 }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source:  |
                        function() { return feature["name:en"] || feature["name"]; }
                    font:
                        fill: [[2,[0.450,0.450,0.450]],[5,*text_fill]]
                        weight: normal
                        transform: uppercase

            # country-z2-3:
            # country-z4:
            # country-z5:
            # country-z6:
            # country-z7:

        region:
            filter:
                kind: region
                $zoom: { min: 4, max: 9 }
            draw:
                text-blend-order:
                    priority: 14
                    visible: false
                    text_source: 'name:short'
                    font:
                        size: 10px
                        weight: 300
                        fill: *text_fill
                        transform: uppercase

            # region-z4:
            # region-z5:
            # region-z6:
            # region-z7-z8:

        populated-places:
            filter:
                kind: locality
            draw:
                icons:
                    visible: *icon_visible_populated_places
                    interactive: true
                    size: [[10,4px],[11,0px]]
                    sprite: townspot-xs-rev
                    buffer: 8px
                    priority: 30
                    text:
                        visible: *text_visible_populated_places
                        buffer: 3px
                        font:
                            size: [[5,9px],[8,10px],[12,11px]]
                text-blend-order:
                    visible: *text_visible_populated_places
                    buffer: 10px
                    interactive: true
                    font:
                        size: [[5,9px],[8,10px],[12,11px]]

            #
            # NOTE: you'd think no-townspot would be the way to go, but icons with size 0px seems to have a bug to also hide the text :(
            #
            # no-townspot:
            #     filter: { $zoom: { min: 11 } }
            #     draw:
            #         icons:
            #             size: 0px
            #             text:
            #                 anchor: center
            #
            # NOTE: So instead we play a shell game with symbolizers per zoom
            #
            _icons_later:
                filter: { $zoom: { min: 11 } }
                draw:
                    icons:
                        visible: false
                    text-blend-order:
                        visible: *text_visible_populated_places

            _text_early:
                filter: { $zoom: { max: 11 } }
                draw:
                    text-blend-order:
                        visible: false
            # END HACK

            z8-50k-below:
                filter: { $zoom: [8,9], population: { min: 10000, max: 50000 } }
                draw:
                    icons:
                        buffer: 25px
                        #color: red
                        #visible: false
            z9-10k-below:
                filter: { $zoom: [8,9], population: { max: 10000 } }
                draw:
                    icons:
                        buffer: 18px
                        #color: blue
                        #visible: false
            z9-no-population:
                filter: { $zoom: [8,9], population: false }
                draw:
                    icons:
                        buffer: 10px
                        #color: yellow
                        #visible: false

            sorry-denver:
                filter:
                    $zoom: [3]
                    name: [Denver]
                draw:
                    icons:
                        visible: false

            halo-populated-places:
                filter:
                    $zoom: { min: 9 }
                draw:
                    icons:
                        text:
                            font:
                                stroke: { color: *text_stroke, width: 3 }
                    text-blend-order:
                        font:
                            stroke: { color: *text_stroke, width: 3 }

            # HACK
            # NOTE: These should use icon: buffer instead of going visible: false, but there are problems using icon here :(
            # This fixes Paris area, but causes problems for small places in the USA eg Table Bluff near Eureka, California.
            funky-village:
                filter: { $zoom: [11], population: { max: 1000 }, kind_detail: [village] }
                draw:
                    text-blend-order:
                        visible: false
            funky-isolated_dwelling:
                filter: { $zoom: [13], kind_detail: [isolated_dwelling] }
                draw:
                    text-blend-order:
                        visible: false
            hamlet:
                filter: { $zoom: [13], kind_detail: hamlet }
                draw:
                    text-blend-order:
                        visible: false
            # END HACK

            # someone in London and Salt Lake City thought neighbourhoods should be tagged place: locality
            # They were wrong
            funky-fake-neighbourhoods:
                filter: { $zoom: { min: 13 }, kind_detail: [locality] }
                draw:
                    text-blend-order:
                        visible: false


            # population-10m-up:
            # population-5m-10m:

            population-1m-5m:
                filter:
                    population: { min: 1000000, max: 5000000 }
                draw:
                    icons:
                        size: [[4,5px],[8,6px],[9,0px]]
                        sprite: townspot-m-rev
                        priority: 9
                        text:
                            font:
                                size: [[4,10px],[6,16px],[8,18px],[12,20px],[13,0px]]
                    text-blend-order:
                        priority: 9
                        font:
                            size: [[4,10px],[6,16px],[8,18px],[12,20px],[13,0px]]
                z9-semibold:
                    filter: { $zoom: { min: 9 } }
                    draw:
                        icons: { text: { font: { weight: 600 } } }
                        text-blend-order: { font: { weight: 600 } }
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,8px],[11,0px]]
                            sprite: capital-l
                            priority: 8
                        text-blend-order:
                            priority: 8
            population-500k-1m:
                filter:
                    population: { min: 500000, max: 1000000 }
                draw:
                    icons:
                        size: [[8,6px],[9,0px]]
                        sprite: townspot-m-rev
                        priority: 11
                        text:
                            font:
                                size: [[5,10px],[8,12px],[10,14px],[12,16px],[13,0px]]
                    text-blend-order:
                        priority: 11
                        font:
                            size: [[5,10px],[8,12px],[10,14px],[12,16px],[13,0px]]
                z11-semibold:
                    filter: { $zoom: { min: 11 } }
                    draw:
                        icons: { text: { font: { weight: 600 } } }
                        text-blend-order: { font: { weight: 600 } }
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,6px],[11,0px]]
                            sprite: capital-m
                            priority: 10
                        text-blend-order:
                            priority: 10
            population-200k-500k:
                filter:
                    population: { min: 200000, max: 500000 }
                draw:
                    icons:
                        size: [[8,6px],[9,6px],[10,6px],[11,0px]]
                        sprite: townspot-m-rev
                        priority: 13
                        collide: false  #debug
                        text:
                            font:
                                size: [[6,10px],[8,14px],[10,15px],[12,16px],[13,0px]]
                    text-blend-order:
                        priority: 13
                        font:
                            size: [[6,10px],[8,14px],[10,15px],[12,16px],[13,0px]]
                z11-semibold:
                    filter: { $zoom: { min: 11 } }
                    draw:
                        icons: { text: { font: { weight: 600 } } }
                        text-blend-order: { font: { weight: 600 } }
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,6px],[11,0px]]
                            sprite: capital-m
                            priority: 12
                        text-blend-order:
                            priority: 12
            population-100k-200k:
                filter:
                    population: { min: 100000, max: 200000 }
                draw:
                    icons:
                        size: [[8,6px],[9,6px],[10,6px],[11,0px]]
                        sprite: townspot-m-rev
                        priority: 15
                        text:
                            font:
                                size: [[6,10px],[8,12px],[14,14px],[15,0px]]
                    text-blend-order:
                        priority: 15
                        font:
                            size: [[6,10px],[8,12px],[14,14px],[15,0px]]
                z11-semibold:
                    filter: { $zoom: { min: 11 } }
                    draw:
                        icons: { text: { font: { weight: 600 } } }
                        text-blend-order: { font: { weight: 600 } }
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,6px],[11,0px]]
                            sprite: capital-m
                            priority: 14
                        text-blend-order:
                            priority: 14
            population-50k-100k:
                filter:
                    population: { min: 50000, max: 100000 }
                draw:
                    icons:
                        size: [[8,5px],[9,5px],[10,6px],[11,0px]]
                        sprite: townspot-s-rev
                        priority: 17
                        text:
                            font:
                                size: [[6,10px],[8,12px],[14,14px],[15,0px]]
                    text-blend-order:
                        priority: 17
                        font:
                            size: [[6,10px],[8,12px],[14,14px],[15,0px]]
                z11-semibold:
                    filter: { $zoom: { min: 11 } }
                    draw:
                        icons: { text: { font: { weight: 600 } } }
                        text-blend-order: { font: { weight: 600 } }
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,5px],[11,0px]]
                            sprite: capital-m
                            priority: 16
                        text-blend-order:
                            priority: 16
            population-20k-50k:
                filter:
                    population: { min: 20000, max: 50000 }
                draw:
                    icons:
                        size: [[8,5px],[9,5px],[10,5px],[11,0px]]
                        sprite: townspot-s-rev
                        priority: 19
                        text:
                            font:
                                size: [[9,10px],[14,12px],[15,0px]]
                    text-blend-order:
                        priority: 19
                        font:
                            size: [[9,10px],[14,12px],[15,0px]]
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,5px],[11,0px]]
                            sprite: capital-s
                            priority: 18
                        text-blend-order:
                            priority: 18
            population-10k-20k:
                filter:
                    population: { min: 10000, max: 20000 }
                draw:
                    icons:
                        size: [[8,4px],[9,4px],[10,4px],[11,0px]]
                        sprite: townspot-xs-rev
                        priority: 21
                        text:
                            font:
                                fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                                size: [[9,10px],[14,12px],[15,0px]]
                    text-blend-order:
                        priority: 21
                        font:
                            fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                            size: [[9,10px],[14,12px],[15,0px]]
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,5px],[11,0px]]
                            sprite: capital-s
                            priority: 20
                        text-blend-order:
                            priority: 20
            population-5k-10k:
                filter:
                    population: { min: 5000, max: 10000 }
                draw:
                    icons:
                        size: [[8,4px],[9,4px],[10,4px],[11,0px]]
                        sprite: townspot-xs-rev
                        priority: 23
                        text:
                            font:
                                fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                                size: [[9,10px],[14,12px],[15,0px]]
                    text-blend-order:
                        priority: 23
                        font:
                            fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                            size: [[9,10px],[14,12px],[15,0px]]
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,5px],[11,0px]]
                            sprite: capital-s
                            priority: 22
                        text-blend-order:
                            priority: 22
            population-2k-5k:
                filter:
                    population: { min: 2000, max: 5000 }
                draw:
                    icons:
                        size: [[8,4px],[9,4px],[10,4px],[11,0px]]
                        sprite: townspot-xs-rev
                        priority: 25
                        text:
                            font:
                                fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                                size: [[9,10px],[14,12px],[15,0px]]
                    text-blend-order:
                        priority: 25
                        font:
                            fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                            size: [[9,10px],[14,12px],[15,0px]]
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,5px],[11,0px]]
                            sprite: capital-s
                            priority: 24
                        text-blend-order:
                            priority: 24
            population-1k-2k:
                filter:
                    population: { min: 1000, max: 2000 }
                draw:
                    icons:
                        size: [[8,4px],[9,4px],[10,4px],[11,0px]]
                        sprite: townspot-xs-rev
                        priority: 27
                        text:
                            font:
                                fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                                size: [[9,10px],[14,12px],[15,0px]]
                    text-blend-order:
                        priority: 27
                        font:
                            fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                            size: [[9,10px],[14,12px],[15,0px]]
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,5px],[11,0px]]
                            sprite: capital-s
                            priority: 26
                        text-blend-order:
                            priority: 26
            population-200-1k:
                filter:
                    population: { min: 200, max: 1000 }
                draw:
                    icons:
                        size: [[8,4px],[9,4px],[10,4px],[11,0px]]
                        sprite: townspot-xs-rev
                        priority: 28
                        text:
                            font:
                                fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                                size: [[9,10px],[14,11px],[15,0px]]
                    text-blend-order:
                        priority: 28
                        font:
                            fill: [[9,[0.25,0.25,0.25]],[11,[0.00,0.00,0.00]]]
                            size: [[9,10px],[14,11px],[15,0px]]
                capital:
                    filter: { country_capital: true, $zoom: { min: 5 } }
                    draw:
                        icons:
                            size: [[10,5px],[11,0px]]
                            sprite: capital-s
                            priority: 27
                        text-blend-order:
                            priority: 27


        neighbourhoods:
            filter:
                kind:
                    - macrohood
                    - neighbourhood
                    - borough
                $zoom: { min: 10 }
                is_landuse_aoi: false
            draw:
                text-blend-order:
                    visible: false
                    priority: 29
                    buffer: 8px
                    text_wrap: 10
                    max_lines: 2
                    font:
                        fill: *text_fill
                        weight: normal
                        transform: uppercase
                        stroke: { color: *text_stroke, width: 2 }
            neighborhood-z11-z12:
                filter:
                    $zoom: [11]
                    min_zoom: [11]
                    max_zoom: { min: 12 }
                    #- kind_tile_rank: { max: 6 }
                draw:
                    text-blend-order:
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 9px
            neighborhood-z13:
                filter:
                    $zoom: [13]
                    min_zoom: [11,12,13]
                    max_zoom: { min: 14 }
                    kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 10px
                            stroke: { color: *text_stroke, width: 3 }
            neighborhood-z14:
                filter:
                    $zoom: [14]
                    min_zoom: [11,12,13,14]
                    max_zoom: { min: 15 }
                    kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        text_wrap: 12
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 11px
                            stroke: { color: *text_stroke, width: 3 }

            # neighborhood-z15:
            # neighborhood-z16:
